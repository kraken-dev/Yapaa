<?php

/**
 * This file is part of the Yapaa library - Yet another PHP AOP approach
 *
 * Copyright (c) 2012 Tomáš Klapka (tomas@klapka.cz)
 *
 * For the full copyright and license information, please view
 * the file license.txt that was distributed with this source code.
 */

namespace Yapaa;

require_once dirname(__FILE__) . '/../../../../lib/vendor/Yapaa/YapaaAspect.php';

/**
 * Test class for YapaaAspect.
 * Generated by PHPUnit on 2012-01-03 at 01:26:23.
 */
class YapaaAspectTest extends \PHPUnit_Framework_TestCase {

    /**
     * @covers {className}::{origMethodName}
     * @todo Implement testWeave().
     */
    public function testWeaveAspect() {
        $logFilename = './yapaaAspectTest.log';

        @unlink($logFilename); // remove the lof file if exists

        require_once __DIR__ . '/TestClassAspect.php';                  // load aspect

        YapaaAspect::weave();                                           // weave aspects

        $object = new \TestClass();

        $object->test_method('test1');                                  // run weaved method
        $this->assertEquals(1, TestClassAspect::getCounter());          // check if advice run

        $object->test_method_weave('test2');
        $this->assertEquals(2, TestClassAspect::getCounter());

        \TestClass::test_static_method('test3');
        $this->assertEquals(3, TestClassAspect::getCounter());

        // check if log file has 3 lines (4 new lines)
        $this->assertEquals(4, count(explode("\n", file_get_contents($logFilename))));
        unlink($logFilename); // remove the log file
    }

}

?>
